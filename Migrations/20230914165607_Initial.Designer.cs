// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VotingService.Persistence;

#nullable disable

namespace VotingService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230914165607_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VotingService.Domain.UserVote", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("VoteTopicChoiceId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "VoteTopicChoiceId");

                    b.HasIndex("VoteTopicChoiceId");

                    b.ToTable("UserVotes", "Vote");
                });

            modelBuilder.Entity("VotingService.Domain.VoteTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TopicDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("VoteTopics", "Vote");
                });

            modelBuilder.Entity("VotingService.Domain.VoteTopicChoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChoiceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VoteTopicId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VoteTopicId");

                    b.ToTable("VoteTopicChoices", "Vote");
                });

            modelBuilder.Entity("VotingService.Domain.UserVote", b =>
                {
                    b.HasOne("VotingService.Domain.VoteTopicChoice", "VoteTopicChoice")
                        .WithMany("UserVotes")
                        .HasForeignKey("VoteTopicChoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VoteTopicChoice");
                });

            modelBuilder.Entity("VotingService.Domain.VoteTopicChoice", b =>
                {
                    b.HasOne("VotingService.Domain.VoteTopic", "VoteTopic")
                        .WithMany("VoteTopicChoices")
                        .HasForeignKey("VoteTopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VoteTopic");
                });

            modelBuilder.Entity("VotingService.Domain.VoteTopic", b =>
                {
                    b.Navigation("VoteTopicChoices");
                });

            modelBuilder.Entity("VotingService.Domain.VoteTopicChoice", b =>
                {
                    b.Navigation("UserVotes");
                });
#pragma warning restore 612, 618
        }
    }
}
